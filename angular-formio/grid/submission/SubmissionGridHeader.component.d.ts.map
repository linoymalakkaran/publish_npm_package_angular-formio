{"version":3,"file":"SubmissionGridHeader.component.d.ts","sources":["SubmissionGridHeader.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA","sourcesContent":["import { ExtendedComponentSchema } from 'formio-custom/formiojs';\nimport { GridHeaderComponent } from '../GridHeaderComponent';\nimport { FormioPromiseService } from '../../formio-promise.service';\nimport { ComponentInstance } from '../../formio.common';\nimport { GridColumn } from '../types/grid-column';\nimport { GridHeader, SortType } from '../types/grid-header';\nimport * as ɵngcc0 from '@angular/core';\nexport declare class SubmissionGridHeaderComponent extends GridHeaderComponent {\n    formComponents: Map<string, ExtendedComponentSchema>;\n    load(formio: FormioPromiseService, query?: any, columns?: Array<GridColumn>): Promise<GridHeader[]>;\n    setHeader(header: GridHeader): void;\n    getHeaderForColumn(column: GridColumn, component?: ExtendedComponentSchema, sort?: SortType): {\n        label: string;\n        key: string;\n        sort: SortType;\n        component: ComponentInstance;\n        renderCell: (cellValue: any, component?: ComponentInstance) => string;\n    };\n    getHeaderForComponent(component: ExtendedComponentSchema, path: string, sort?: SortType): {\n        label: string;\n        key: string;\n        sort: SortType;\n        component: ComponentInstance;\n    };\n    setComponentsHeaders(components: Map<string, ExtendedComponentSchema>, sort?: SortType): void;\n    setComponents(components: any): void;\n    static ɵfac: ɵngcc0.ɵɵFactoryDef<SubmissionGridHeaderComponent, never>;\n    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SubmissionGridHeaderComponent, \"ng-component\", never, {}, {}, never, never>;\n}\n"]}