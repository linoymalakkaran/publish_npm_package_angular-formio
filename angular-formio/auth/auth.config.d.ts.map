{"version":3,"file":"auth.config.d.ts","sources":["auth.config.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as ɵngcc0 from '@angular/core';\nexport interface FormioAuthFormConfig {\n    path?: string;\n    form?: string;\n    component?: any;\n}\nexport interface FormioAuthRouteConfig {\n    auth?: any;\n    login?: any;\n    register?: any;\n}\nexport declare class FormioAuthConfig {\n    component?: any;\n    delayAuth?: any;\n    login?: FormioAuthFormConfig;\n    register?: FormioAuthFormConfig;\n    oauth?: FormioOAuthConfig;\n    static ɵfac: ɵngcc0.ɵɵFactoryDef<FormioAuthConfig, never>;\n    static ɵprov: ɵngcc0.ɵɵInjectableDef<FormioAuthConfig>;\n}\nexport interface FormioOAuthConfig {\n    type: FormioOauthType;\n    options: FormioOktaConfig | FormioSamlConfig;\n}\nexport declare enum FormioOauthType {\n    okta = \"okta\",\n    saml = \"saml\"\n}\nexport interface FormioOktaConfig extends OktaConfig {\n    formio?: any;\n}\nexport interface FormioSamlConfig {\n    relay: string;\n}\nexport interface OktaConfig {\n    url?: string;\n    tokenManager?: OktaTokenManagerConfig;\n    issuer?: string;\n    clientId?: string;\n    redirectUri?: string;\n    postLogoutRedirectUri?: string;\n    pkce?: boolean;\n    authorizeUrl?: string;\n    userinfoUrl?: string;\n    tokenUrl?: string;\n    ignoreSignature?: boolean;\n    maxClockSkew?: number;\n    scopes?: string[];\n    httpRequestClient?: Function;\n}\nexport interface OktaTokenManagerConfig {\n    storage?: string | {\n        getItem?: Function;\n        setItem?: Function;\n    };\n    secure?: boolean;\n    autoRenew?: boolean;\n    expireEarlySeconds?: number;\n    storageKey?: string;\n}\n"]}