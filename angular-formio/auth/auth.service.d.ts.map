{"version":3,"file":"auth.service.d.ts","sources":["auth.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { FormioAuthConfig } from './auth.config';\nimport { FormioAppConfig } from '../formio.config';\nimport * as ɵngcc0 from '@angular/core';\nexport declare class FormioAuthService {\n    appConfig: FormioAppConfig;\n    config: FormioAuthConfig;\n    user: any;\n    authenticated: boolean;\n    loginForm: string;\n    onLogin: EventEmitter<object>;\n    onLogout: EventEmitter<object>;\n    registerForm: string;\n    onRegister: EventEmitter<object>;\n    onUser: EventEmitter<object>;\n    onError: EventEmitter<any>;\n    ready: Promise<boolean>;\n    readyResolve: any;\n    readyReject: any;\n    projectReady?: Promise<any>;\n    accessReady?: Promise<any>;\n    userReady?: Promise<any>;\n    formAccess: any;\n    submissionAccess: any;\n    roles: any;\n    is: any;\n    constructor(appConfig: FormioAppConfig, config: FormioAuthConfig);\n    onLoginSubmit(submission: object): void;\n    onRegisterSubmit(submission: object): void;\n    init(): void;\n    setUser(user: any): void;\n    setUserRoles(): void;\n    logoutError(): void;\n    logout(): void;\n    static ɵfac: ɵngcc0.ɵɵFactoryDef<FormioAuthService, never>;\n    static ɵprov: ɵngcc0.ɵɵInjectableDef<FormioAuthService>;\n}\n"]}